Q: What happens when you initialize a repository? Why do you need it? 

A: When I initialize a directory, I am able to see what is in the file and how many files are in the directory. It is a good tool to track the status of the file.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: The staging area is part of the repository and it is where, from what I understand, non-commited files are 'staged' before being commited. The value is it allows a 'second-chance' to go over what is about to be commited, almost a fail safe area.

Q: How can you use the staging area to make sure you have one commit per logical change? 

A: By using the staging area, I can reflect on what I'm about to commit, meaning if it is a logical commit or needs revision.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: When using branches, it helps to organize my history because I'm able to switch between branches if I want to test or temporary refine my work. 

Q: How do the diagrams help you visualize the branch structure?

A: The diagram helps me visualize the branch structure so that I understand how the branches work and how to visualize what branch I'm in at any given time. For instance, if I wanted to work on a branch outside of the 'master' file, the changes I make will not affect the 'master branch' until a 'merge' of the 2 or more branches.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A: The result of merging two branches together is by merging the branch of the master to the branch of the file(s) together to make a master branch. After merging, it is safe to delete the branch name of the one merged to the master branch without worrying about losing those merged files.

Q: What are the pros and cons of Git's automatic merging vs. always doing the merges manually?

A: If Git were to automatically merge branches, the conflicting branches would become a problem and possibly create a bug. By merging manually, there is better control over merging the two branches.
